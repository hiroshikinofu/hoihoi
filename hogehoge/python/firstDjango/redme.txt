※このフォルダは「Pythonプログラミングのツボとコツが絶対にわかる本」に掲載されているコードを保存しています。

※Python3を使用しています。

◆URL：
http://www.shuwasystem.co.jp/products/7980html/4868.html

目次
第1章 Pythonの基礎を習得しよう
1-1 Pythonに親しもう
●Pythonってなんだ？

・コードが見やすい

・豊富なライブラリが使える

・すぐに実行できる軽量言語

1-2 はじめの一歩、簡単なコードを実行しよう
●インタプリターに直接入力してみよう

1-3 数値計算をしてみよう
●基本的な演算

●変数を利用した計算

●加算代入で変数の値を増やす

1-4 文字列と入出力関数を使ってみよう
●ブラックジャックゲームでも使用するprint関数とinput関数

●文字列を記述して変数に代入する

●文字列を＋で連結する

●print関数を使って画面にメッセージを出力しよう

●input関数を使ってキーボードから文字列を読み込もう

●数値と文字列の四則演算はエラーになる

●文字列に数値を埋め込む

●raw文字列とは?

●メソッドと関数の違い

●条件式で値を比較する

・比較演算子

・論理演算子

1-5 コードをファイルに書いてみよう
●プログラミングするための準備

●準備1 文字コードを指定しよう

●準備2 インデントを半角スペース4つに統一しよう

●注意1 タブ文字と半角スペースを混ぜてはいけない

●注意2 変数を書いただけではその内容を表示しない

●注意3 半角スペースを見つけるのが難しい

●pythonコマンドでスクリプトを実行しよう

●ソースファイル中にコメントを書こう

1-6 if文による分岐
●if文の記述方法を理解しよう

1-7 繰り返し処理
●while文とfor文の記述方法を理解しよう

●while文

●for文

●range関数でC言語風のfor文ループ

●for文の中でfor文で繰り返す

1-8 複数の値を持つデータ構造
●リスト、辞書とは？

●リストとは？

・リストの作成と値の参照

・リストの更新

・空のリスト

・リストへの要素の追加と削除

●タプルとは？

●joinメソッドを使って文字列を連結する

●辞書とは？

・辞書の作成とキーからの参照

・値の上書き

●辞書を連結する

●辞書をfor文で反復する

●二重構造の辞書

1-9 breakとcontinue
●プログラムを制御するには

1-10 値の型を知ろう
●type関数を使ってみよう

●リテラルは値を記述するためのルール

●文字列のリテラル

●整数のリテラル

●実数のリテラル

1-11 とても便利なリスト内包表記
●for文を使ったリストの作り方

●リスト内包表記でトランプカードのデッキを作ってみよう

1-12 関数について
●なぜ関数が必要になるのか？

●自分で関数を作るには？

●関数を使ってみよう

1-13 ソースファイルをモジュールとして使う
●関数はこんな使い方もできる！

●モジュールを任意の名前でインポートする

●モジュール名から特定の機能だけをインポートする

1-14 例外処理について
●エラーになってプログラムを終了しないようにしたい

●再入力させるようにするには？

第2章 ブラックジャックゲームを作ってみよう
2-1 プログラムを作る前の準備をしよう
●これまでの知識プラスαでプログラミングを体験しよう！

●ゲームで使用するもの

・トランプ

●ゲームの登場人物

・プレイヤー

・ディーラー

●勝敗の判定

・手札（カード）のポイント

・ルール

・チップ

・ゲームの流れ

2-2 ブラックジャックゲームのプログラムを作ろう
●ループと条件でゲーム進行か終了か判断させよう

●トランプデッキを作ってシャッフルをしよう

・randomモジュールって何？ どうやって使う？

・カードをシャッフルするプログラムを作ろう

●カードを配る処理はどう考えればいい？

2-3 手札のポイントを数えるには？
●手札のポイントを数えよう

●手札のJ、Q、Kの扱いを考えよう

●手札の「A」の扱いを考えよう

2-4 実際のゲームの手札の表示の仕方を考えよう
●手札の中身を表示してみよう

2-5 ゲームの進行を考えよう
●プレイヤーターンの処理

・スタンドの処理

・ヒットの処理

・ダブルの処理

●プレイヤーターンを関数化しよう

●ディーラーターンの処理

●ディーラーターンを関数化しよう

●ベットするときの処理を書いてみよう

●勝敗の決定

●ブラックジャックゲームの完成

第3章 Webアプリを作ってみよう
3-1 Djangoを使おう
●Djangoとは？

●Djangoを導入しよう

3-2 実際に動かしてみよう
●プロジェクトの作成

●サーバーでDjangoを起動してみよう

3-3 Djangoで文字を表示させよう
●文字をWebブラウザに表示させよう

●Djangoのプロジェクトとアプリケーション

・アプリケーションを作ろう

●文字を表示するコードを書こう

3-4 画像を表示させよう
●テンプレートとrender関数

●トランプの画像の用意

●HTML文書の作成

●テンプレートファイルを使えるようにする

●views.pyの改良

●urls.pyの修正

●ブラウザでアクセスしてみよう

3-5 テンプレートにデータを当てはめよう
●render関数にデータとテンプレートを渡す

●views.pyに新しくwelcome関数を作ろう

●urls.pyへの追加

●ブラウザでアクセスしてみよう

●テンプレートで条件分岐を使おう

●view関数を作る

●テンプレートで繰り返しを実現しよう

3-6 Djangoにデータを送る
●POSTとGET

●POSTメソッド

●view関数を作ろう

●フォームからトランプの画像を選んで表示させよう

3-7 Djangoでデータを保存する
●データを保存する

●Redisを使う

●実際に動かしてみよう

●セッション

●ログインシステムを作ってみよう

第4章 ブラックジャックゲームをWeb上で遊べるようにしよう
4-1 Djangoで実装するにあたって
●Webアプリにするために考えなければならないこと

●必要なデータは何かをまとめてみよう

●処理の流れを考えてみよう

4-2 Djangoで実装しよう
●文字のみでブラックジャックゲームを作成しよう

●ゲームページを作る

・bjgame.htmlの作成

・views.pyの作成

・urls.pyの編集と作成

4-3 ブラックジャックゲームを完成させよう
●きれいに表示するために

●動かしてみよう

4-4 作ったものをサーバーで動かしてみよう
●前準備、知識

●環境を用意しよう

●wsgi.pyの編集

●settings.pyの編集

第5章 体験しよう！ カードゲームに人工知能的なプログラミング！？
5-1 人工知能的なプログラミングとは？
●人工知能を支える認識技術

●ディープラーニングとは？

5-2 ディーラーの行動を人工知能に任せる？
●ディーラーの戦略とは

5-3 人工知能を使ったディーラーと対戦してみよう
●対戦してみよう！

5-4 プログラムの概説
●今回使ったライブラリ

・Numpyとは？

・Theanoとは？

・Kerasとは？

・Pandasとは？

●ブラックジャックゲームを人工知能で

・どのように学ばせる？

5-5 今回使用した人工知能の仕組み
●Q-Learningとは？

5-6 DQNとは？
●DQNの考え方

●コラム
pipの応用的な使い方

アドレス、ポート番号の指定

正規表現

テンプレートにオブジェクトを渡す

Redisのデータを消すには？

サーバー環境

資料
資料1 Pythonのインストール
資料2 エディタの導入
●atomエディタを導入する

資料3 ターミナルについて
●サーバーへの接続

●覚えておきたいLinuxコマンド

●使い方の具体例

資料4 Gitについて
資料5 サーバーにあるファイルの変更
資料6 WindowsでのCentOSの環境と動作確認の手順
●VMware Workstation Playerのインストール

●CentOSのインストール

●VMware Workstation Playerでのサーバー環境構築

●IPアドレスの調べ方